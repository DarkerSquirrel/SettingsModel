<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="STR_ABOUT_Copyright" xml:space="preserve">
    <value>Copyright</value>
  </data>
  <data name="STR_ABOUT_Modules" xml:space="preserve">
    <value>Modules</value>
  </data>
  <data name="STR_About_SETTINGS_Caption" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="STR_ABOUT_Version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="STR_ACCENT_LABEL" xml:space="preserve">
    <value>Accent</value>
  </data>
  <data name="STR_ACCENT_LABEL_TT" xml:space="preserve">
    <value>Select a color for highlighting items with your preferred color.</value>
  </data>
  <data name="STR_Appearance_SETTINGS_Caption" xml:space="preserve">
    <value>Appearance</value>
  </data>
  <data name="STR_APPEARANCE_THEME" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="STR_BOOKMARKS_OPTION_CAPTION" xml:space="preserve">
    <value>Bookmarks</value>
  </data>
  <data name="STR_BOOKMARKS_OPTION_CAPTION_TT" xml:space="preserve">
    <value>Build a set of frequently used folders and access them via shortcut in the application</value>
  </data>
  <data name="STR_CURRENT_APP_LANG_CAPTION" xml:space="preserve">
    <value>Application Language</value>
    <comment>Caption of language selection option in program settings view.</comment>
  </data>
  <data name="STR_CURRENT_APP_LANG_CAPTION_TT" xml:space="preserve">
    <value>Select your prefered application language</value>
  </data>
  <data name="STR_CURRENT_APP_BOOKMARK_CAPTION_TT" xml:space="preserve">
    <value>Select your frequently used paths for usage in this applaiction.</value>
  </data>
  <data name="STR_DARK_THEME" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="STR_FIXED_FONT_SIZE_LABEL" xml:space="preserve">
    <value>Fixed Font Size</value>
  </data>
  <data name="STR_FIXED_FONT_SIZE_LABEL_TT" xml:space="preserve">
    <value>Define your preferred fixed font size to match your screen resolution.</value>
  </data>
  <data name="STR_FONT_SIZE_LABEL" xml:space="preserve">
    <value>Font Size</value>
  </data>
  <data name="STR_FONT_SIZE_LABEL_TT" xml:space="preserve">
    <value>Define your preferred font size to match your screen resolution.</value>
  </data>
  <data name="STR_GENERAL_Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="STR_GENERAL_Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="STR_GENERAL_SETTINGS_Caption" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="STR_ICON_SIZE_LABEL" xml:space="preserve">
    <value>Icon size</value>
  </data>
  <data name="STR_ICON_SIZE_LABEL_TT" xml:space="preserve">
    <value>Define your preferred icon size to match your screen resolution.</value>
  </data>
  <data name="STR_LIGHT_THEME" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="STR_ReloadFilesOnStartUp_CAPTION" xml:space="preserve">
    <value>Reload files when application re-starts</value>
    <comment>Caption displayed at checkbox in program settings. This checkbox controls whether the application reloads a file that was open in the previous session or not.</comment>
  </data>
  <data name="STR_APP_TITLE" xml:space="preserve">
    <value>MUI Framework Demo Application for SettingsModel</value>
  </data>
  <data name="STR_DEMO_FEATURE1" xml:space="preserve">
    <value>This demo application implements a Modern UI style in WPF. It demonstrates the SettingsModel project that implements storage and retrieval of program settings via settings folder:</value>
  </data>
  <data name="STR_DEMO_FEATURE2" xml:space="preserve">
    <value>Changing a setting (and restarting the application) should result in a changed program behavior (except for Bookmarks and Size of Fixed Font since these only demostrate storage and retrieval of settings).</value>
  </data>
  <data name="STR_DEMO_FEATURE3" xml:space="preserve">
    <value>Click Settings and change something to see SettingsModel in action.</value>
  </data>
  <data name="STR_DEMO_FEATURE4" xml:space="preserve">
    <value>Set a Breakpoint for example at the Engine.AddOption(...) method to see the action.</value>
  </data>
  <data name="STR_HINT" xml:space="preserve">
    <value>Hint</value>
  </data>
  <data name="STR_UnexpectedError_Caption" xml:space="preserve">
    <value>Unexpected error</value>
  </data>
  <data name="STR_help_label" xml:space="preserve">
    <value>help</value>
  </data>
  <data name="STR_home_label" xml:space="preserve">
    <value>home</value>
  </data>
  <data name="STR_settings_label" xml:space="preserve">
    <value>settings</value>
  </data>
  <data name="STR_software_label" xml:space="preserve">
    <value>software</value>
  </data>
  <data name="STR_Welcome_label" xml:space="preserve">
    <value>welcome</value>
  </data>
  <data name="STR_ABOUT_Link" xml:space="preserve">
    <value>Project</value>
  </data>
</root>